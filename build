#!/bin/bash

function usage {
  echo 'build [--image-name name] [--git-url url] [--diaspora-version version] [--ruby-version version] [--gem-version version]' >&2
}

IMAGE_NAME=koehn/diaspora

# NOTE: The BSD version of `getopt` is incompatible with the one this version expects.
# On MacOS systems, install and use `gnu-getopt`. You have been warned. 
OPTS=$(getopt -o h -l "image-name:,git-url:,diaspora-version:,ruby-version:,gem-version:" -n 'build' -- "$@") ; err=$?

if [ $err -ne 0 ] ; then usage ; exit 1; fi

set -e

eval set -- "$OPTS"

DOCKER_TAG=latest

while true; do
  case "$1" in
    --git-url ) BUILD_ARGS="$BUILD_ARGS --build-arg GIT_URL=$2 "; shift 2 ;;
    --diaspora-version ) DOCKER_TAG=$2 ; BUILD_ARGS="$BUILD_ARGS --build-arg GIT_BRANCH=v$2 "; shift 2 ;;
    --ruby-version ) BUILD_ARGS="$BUILD_ARGS --build-arg RUBY_VERSION=$2 "; shift 2 ;;
    --gem-version ) BUILD_ARGS="$BUILD_ARGS --build-arg GEM_VERSION=$2 "; shift 2 ;;
    --image-name ) IMAGE_NAME=$2 ; shift 2 ;;
    -- ) shift ; break ;;
    * ) usage ; exit 1 ;;
  esac
done

BUILD_ARGS="$BUILD_ARGS --build-arg DIASPORA_DOCKER_GIT_COMMIT=`git log -1 --format=%h` "

docker build -t $IMAGE_NAME:$DOCKER_TAG $BUILD_ARGS .

docker push $IMAGE_NAME:$DOCKER_TAG

